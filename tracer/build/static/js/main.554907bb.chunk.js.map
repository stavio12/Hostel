{"version":3,"sources":["state/actionType/index.ts","state/reducers/HostelReducer.tsx","state/reducers/index.ts","state/store/store.ts","state/action-creators/index.ts","hook/useTypeSelector.ts","Component/Hostel/HosteCards.tsx","Component/Hostel/Home.tsx","hook/useActions.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","initialState","loading","error","data","reducer","state","action","type","FIND_HOSTEL","HOSTEL_SUCESS","payload","ERROR","hostelReducers","combineReducers","hostel","HostelReducer","store","createStore","reducers","applyMiddleware","thunk","getHostel","dispatch","a","axios","get","console","log","map","result","message","findHostel","uni","budget","length","useTypedSelector","useSelector","HostelCards","Container","Row","CardGroup","Col","xs","md","className","Card","Img","variant","src","imageCover","Body","Title","hostelName","location","title","href","contact","price","university","Text","overview","Home","useState","Uni","setUni","setPrice","useDispatch","bindActionCreators","actionCreators","useActions","useEffect","id","onSubmit","event","preventDefault","aria-hidden","onChange","e","target","value","required","Alert","Spinner","animation","role","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.554907bb.chunk.js","sourcesContent":["export enum ActionType {\r\n  FIND_HOSTEL = \"search_hostel\",\r\n  HOSTEL_SUCESS = \"find_hostel_success\",\r\n  ERROR = \"error\",\r\n}\r\n\r\n//these are types of actions that needs to take place to reduce whatever data\r\n\r\n//related to all action folders\r\n","import { ActionType } from \"../actionType\";\r\nimport { Action } from \"../actions\";\r\n\r\n// interface for typescript\r\ninterface HostelState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  data: string[];\r\n}\r\n\r\n// initial state as usual\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data: [],\r\n};\r\n\r\nconst reducer = (state: HostelState = initialState, action: Action): HostelState => {\r\n  // the reducer needs to have data corresponding to the RepState\r\n  switch (action.type) {\r\n    case ActionType.FIND_HOSTEL:\r\n      return { loading: true, error: null, data: [] };\r\n    case ActionType.HOSTEL_SUCESS:\r\n      return { loading: false, error: null, data: action.payload };\r\n    case ActionType.ERROR:\r\n      return { loading: false, error: action.payload, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n//uses actions\r\n","import { combineReducers } from \"redux\";\r\nimport HostelReducer from \"./HostelReducer\";\r\n\r\nconst hostelReducers = combineReducers({\r\n  hostel: HostelReducer,\r\n});\r\n\r\nexport default hostelReducers;\r\n// in here all the reducers are being combined into hostel\r\n\r\n// this root state will take the reducer function and rerturn the type of whatever is there\r\nexport type RootState = ReturnType<typeof hostelReducers>;\r\n\r\n//liks to hostel reducer file\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"../reducers\";\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n\r\n// this file stores all of the reducers so literally more like a holding a data if only its available\r\n\r\n// links with reducers\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ActionType } from \"../actionType\";\r\nimport { Action } from \"../actions\";\r\n\r\n//this is where the actual action is taking place\r\n//combines action type and actions in here\r\n\r\nexport const getHostel = () => {\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    //dispatch set to Action so dispatch can detect what we actually specify for the payload\r\n    dispatch({\r\n      type: ActionType.FIND_HOSTEL,\r\n    });\r\n\r\n    try {\r\n      const { data } = await axios.get(\"https://hosteltracerapi.herokuapp.com/api/hostel/\");\r\n      console.log(data);\r\n\r\n      const hostel = data.data.map((result: any) => {\r\n        return result;\r\n      });\r\n      dispatch({\r\n        type: ActionType.HOSTEL_SUCESS,\r\n        payload: hostel,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const findHostel = (uni: string, budget: string) => {\r\n  //setting list to be params which we will set the search words to\r\n  return async (dispatch: Dispatch<Action>) => {\r\n    //dispatch set to Action so dispatch can detect what we actually specify for the payload\r\n    dispatch({\r\n      type: ActionType.FIND_HOSTEL,\r\n    });\r\n    console.log(uni, budget);\r\n    try {\r\n      const { data } = await axios.get(`https://hosteltracerapi.herokuapp.com/api/hostel?price[lte]=${budget}&university=${uni}&sort=price`);\r\n\r\n      const hostel = data.data.map((result: any) => {\r\n        return result;\r\n      });\r\n      if (hostel.length === 0) {\r\n        dispatch({\r\n          type: ActionType.ERROR,\r\n          payload: \"No Results Found!\",\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: ActionType.HOSTEL_SUCESS,\r\n          payload: hostel,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: ActionType.ERROR,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from \"../state\"; // import the type of reducer data name RootState\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n// links to Repo list and state RootState coming from reducer since thats where the data would come from\r\n","import { CardGroup, Card, Row, Col, Container } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../../hook/useTypeSelector\";\r\n\r\nconst HostelCards: React.FC = () => {\r\n  const { data } = useTypedSelector((state: any) => state.hostel);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          {\" \"}\r\n          <CardGroup>\r\n            {data.map((hostel: any) => {\r\n              return (\r\n                <Col xs={12} md={4} className=\"pb-5\">\r\n                  <Card>\r\n                    <Card.Img variant=\"top\" src={hostel.imageCover} />\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        <span className=\"font-weight-bolder\"> {hostel.hostelName}</span>\r\n                        <br /> {hostel.location} .\r\n                        <abbr title=\"Telephone\">\r\n                          <a href=\"tel:+2562501258\">{hostel.contact}</a>\r\n                        </abbr>\r\n                        <span className=\"price float-right p-2 text-white rounded font-weight-bolder\">GHC {hostel.price} </span>\r\n                        <br />\r\n                        University: {hostel.university}\r\n                      </Card.Title>\r\n                      <Card.Text>{hostel.overview} </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </CardGroup>\r\n        </Row>{\" \"}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HostelCards;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Spinner, Alert } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../../hook/useTypeSelector\";\r\nimport { useActions } from \"../../hook/useActions\"; // a hook that does the prvious thing for us.\r\nimport HostelCards from \"./HosteCards\";\r\nimport HostelFilters from \"./HostelFilters\";\r\nconst Home: React.FC = () => {\r\n  const [Uni, setUni] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const { findHostel, getHostel } = useActions(); // give us all the datas we have from state\r\n\r\n  useEffect(() => {\r\n    getHostel();\r\n  }, []);\r\n\r\n  const { data, error, loading } = useTypedSelector((state: any) => state.hostel);\r\n  const search = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    findHostel(Uni, price);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container pb-5 mb-3\">\r\n        <div id=\"perfect\">\r\n          <h1 className=\"text-center  mb-5 place\">\r\n            Find Your <span className=\"place font-weight-bolder\">Perfect Place.</span>\r\n          </h1>\r\n          <form id=\"search\" onSubmit={search}>\r\n            <div className=\"form-row align-items-center\">\r\n              <div className=\"col-12\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend \">\r\n                    <span className=\"input-group-text bg-white\">\r\n                      <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <select onChange={(e) => setUni(e.target.value)} value={Uni} className=\"custom-select school offset-12\" id=\" inlineFormCustomSelectPref\" required>\r\n                    <option value=\"default\">Search for a university hostel....</option>\r\n                    <option value=\"APoly\">Accra Technical University </option>\r\n                    <option value=\"upsa\">University of Professional Studies, Accra (UPSA)</option>\r\n                    <option value=\"legon\">University of Ghana</option>\r\n                    <option value=\"central\">Central University </option>\r\n                    <option value=\"gtuc\">Ghana Technology University College</option>\r\n                  </select>\r\n                  {/* <!-- <input type=\"text\" id=\"school\" aria-label=\"search\" placeholder=\"Search for a university hostel....\" className=\"form-control text-center\"> --> */}\r\n                  <select onChange={(e) => setPrice(e.target.value)} value={price} className=\"custom-select budget offset-12\" id=\"inlineFormCustomSelectPref\" required>\r\n                    <option value=\"default\">Budget Range</option>\r\n                    <option value=\"299\">100 - 300</option>\r\n                    <option value=\"300\">300 - 600</option>\r\n                    <option value=\"600\">600 - </option>\r\n                  </select>\r\n                  <button type=\"submit\" className=\"btn btn-primary pl-5 pr-5  \">\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* <HostelFilters/> */}\r\n      <div className=\"text-center container\">\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        {loading && (\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        )}{\" \"}\r\n      </div>\r\n      {!error && !loading && data && <HostelCards />}{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../state\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return bindActionCreators(actionCreators, dispatch);\r\n};\r\n// instead of doing a whole lot of codes in the Repolist file we do this here to make that file..\r\n//toggle between the two and read the comments to understand\r\n\r\n// related to action creators from state\r\n","// import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state\";\r\nimport Home from \"./Component/Hostel/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <Home />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}